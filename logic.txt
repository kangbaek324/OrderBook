* api


# user api // 유저 관련 api

1. 회원가입 POST ( user/sign-up )
    params : username, password, phone, email 
    회원가입 요청 -> 휴대폰으로 인증 메시지 전달
    >> 인증완료시 이메일로 가입 환영 문구전달

2. 로그인 POST ( user/sign-in )
    params : username, password
    >> DB에서 데이터비교후 jwt token 발급

3. 계좌개설 POST ( user/account/create )
    >> 로그인된 정보를 바탕으로 계좌 개설

# user stock api // 유저와 주식간의 상호작용 api

## 주문
1. 매수주문 POST ( user/stock/orders )
    params : stock_id, price, number, order_type, trading_type
    >> 매수주문 생성 trading_type : buy

2. 매도주문 POST ( user/stock/orders )
    params : stock_id, price, number, order_type, trading_type
    >> 매도주문 생성 trading_type : sell

3. 정정주문 PUT ( user/stock/orders/{order_id} )
    params : order_id, price
    >> 특정 주문 정정

5. 취소주문 DELTE ( user/stock/orders/{order_id} )
    params : order_id
    >> 특정 주문 취소

## 조회
1. 미체결 주문 조회 GET ( user/stock/orders?status=not-match&account_number=1000 )
2. 체결 주문 조회 GET ( user/stock/orders?status=match )
3. 전체 주문 조회 GET ( user/stock/orders )


# web socket
1. 내 잔고 조회
   >> 보유중인 주식의 가격이 변동될때(or 최초조회)마다 데이터 전달
2. 호가창
   >> 호가창의 주문이 변동될때(or 최초조회)마다 현재가 기준으로 +10, -10호가의 데이터 전달
3. 차트 (추후추가)

* 체결 로직
# 지정가 limit
    매수 / 매도 주문을 받은뒤 체결가능한 주문이 있다면 시장에 먼저 나온주문에 락을걸고
    order 테이블에 주문을 등록한뒤 락을 건다 체결과정을 거친뒤 체결이 모두 끝날때까지 무한루프
    더이상 체결할게 없으면 호가에 남은 잔량 띄우기
# 시장가 market
    똑같음 무조건 다 체결되야됨 호가가 부족해서 체결안되면 현재가에 지정가로 잔량으로 남음


* 계좌 초기 세팅
insert into accounts (user_id, account_number, money) values(1, 1000, 100000000);